#! /usr/bin/env python

# Get usage information from your ISP.

import sys
import urllib2
from BeautifulSoup import BeautifulStoneSoup as bsoup

def Debug(message, spacer=False):
    debug = False

    if debug:
        if spacer:
            print
        for line in message.splitlines():
            print "DEBUG: " + line

def Internode(username, password):
    # Constants
    baseurl = "https://customer-webtools-api.internode.on.net"
    apiloc = "/api/v1.5/"

    # Initial Values
    usage = "0"
    quota = "0"
    unmetered = "0"
    uploads = "0"

    # Setup Connection
    passman = urllib2.HTTPPasswordMgrWithDefaultRealm()
    passman.add_password(None, baseurl + apiloc, username, password)
    authhandler = urllib2.HTTPBasicAuthHandler(passman)
    opener = urllib2.build_opener(authhandler)
    opener.addheaders = [('User-agent', useragent)]
    urllib2.install_opener(opener)

    # Get ServiceID
    servicedata = urllib2.urlopen(baseurl + apiloc)
    soup = bsoup(servicedata.read())
    Debug("servicedata:\n" + soup.prettify(), True)
    serviceloc = soup.internode.api.services.service["href"] # API supports multiple services; only using the first one.  What
                                                             # will happen if I get multiple?
    Debug("serviceloc:\n" + serviceloc)

    # Get Service Info
    servicelist = urllib2.urlopen(baseurl + serviceloc)
    soup = bsoup(servicelist.read())
    for resource in soup.internode.api.resources:
        Debug("resource:\n" + resource.prettify(), True)
        if resource.contents[0] == "usage":
            usageloc = resource["href"]
            Debug("usageloc: " + usageloc)

            # Get Usage Data
            trafficdata = urllib2.urlopen(baseurl + usageloc)
            soup = bsoup(trafficdata.read())
            Debug("trafficdata:\n" + soup.prettify(), True)

            # In future will need to loop through traffic list to find uploads and downloads as well as total traffic.  Waiting
            # for Internode to implement this part of the API.
            soup = soup.internode.api.traffic

            usage = str(int(soup.contents[0]) / 1000000)
            quota = str(int(soup["quota"]) / 1000000)
            break

    Debug("usage: " + usage, True)
    Debug("quota: " + quota)
    Debug("unmetered: " + unmetered)
    Debug("uploads: " + uploads)

    return [usage, quota, unmetered, uploads]

# MAIN
if __name__ == "__main__":
    # Constants
    useragent = "CactiISPQuota/1.01"
    config_file = "/etc/cacti/ISP_Quota.conf"

    # Get arguements
    try:
        isp_index = sys.argv[1]
    except IndexError:
        sys.exit("Usage: get-isp-quota isp_index")

    # Pull username & password from config file
    f = open(config_file)
    for line in f:
        data = line.split()
        if len(data) > 0 and data[0] == isp_index:
            isp_name = data[1].lower()
            username = data[2]
            password = data[3]
            break
    f.close()

    Debug("username: " + username)
    Debug("password: [HIDDEN]") # + password
    Debug("isp_name: " + isp_name)

    # Calculate usage
    if isp_name == "internode":
        usage, quota, unmetered, uploads = Internode(username, password)
    else:
        usage = 0
        quota = 0
        unmetered = 0
        uploads = 0

    print "usage:" + usage, "limit:" + quota, "unmetered:" + unmetered, "uploads:" + uploads
